name: 'Deployment Azure Policy'

on:
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'policies/**'
      - '.github/workflows/terraform-plan.yml'
  workflow_dispatch:
    inputs:
      TARGET_ENVIRONMENT:
        description: 'Target environment for deployment'
        required: true
        type: choice
        options:
          - development
          - production
        default: 'development'

permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_USE_OIDC: true
      TARGET_ENVIRONMENT: ${{ github.event_name == 'workflow_dispatch' && inputs.TARGET_ENVIRONMENT || (github.ref == 'refs/heads/main' && 'production' || 'development') }}
    environment: ${{ env.TARGET_ENVIRONMENT == 'production' && 'Production' || 'Development' }}

    defaults:
      run:
        working-directory: ./policies

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: 'Login to Azure with Azure CLI'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Install Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0

      - name: 'Run Terraform Init'
        run: |
          terraform init \
            -backend-config="envs/${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}/backend.config"

      - name: 'Run Terraform Plan'
        run: |
          terraform plan \
            -var-file="envs/${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}/terraform.tfvars"
